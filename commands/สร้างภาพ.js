const axios = require('axios');
const fs = require('fs');
const path = require('path');

module.exports = {
  config: {
    name: "genimg",
    version: "1.0.0",
    description: "р╕кр╕гр╣Йр╕▓р╕Зр╕ар╕▓р╕Юр╕Ир╕▓р╕Бр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Бр╕ер╕░р╕кр╣Ир╕Зр╕ар╕▓р╕Юр╕Ир╕гр╕┤р╕Зр╣Вр╕Фр╕вр╣Гр╕Кр╣Й API р╣Гр╕лр╕бр╣И",
    usage: "/genimg <р╕Др╕│р╕кр╕▒р╣Ир╕Зр╕кр╕гр╣Йр╕▓р╕Зр╕ар╕▓р╕Ю>",
    aliases: ["createimg", "flux"],
  },
  run: async ({ api, event, args }) => {
    const { senderID } = event;

    if (args.length < 1) {
      return api.sendMessage(senderID, `
тЬи **р╕Др╕│р╕кр╕▒р╣Ир╕Зр╕кр╕гр╣Йр╕▓р╕Зр╕ар╕▓р╕Юр╕кр╕╕р╕Фр╣Ар╕Чр╕Ю** тЬи
тЭМ р╕гр╕╣р╕Ыр╣Бр╕Ър╕Ър╣Др╕бр╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З!
ЁЯУЬ р╣Гр╕Кр╣Й: /genimg <р╕Др╕│р╕кр╕▒р╣Ир╕Зр╕кр╕гр╣Йр╕▓р╕Зр╕ар╕▓р╕Ю>
ЁЯТб р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕З: /genimg р╕бр╕Фр╕вр╕▒р╕Бр╕йр╣Мр╕Бр╕┤р╕Щр╣Ар╕бр╕╖р╕нр╕З
      `);
    }

    const prompt = args.join(" ");
    const startTime = Date.now();

    const apiUrl = `http://de01.uniplex.xyz:1636/api/generate-image?prompt=${encodeURIComponent(prompt)}`;

    try {
      // р╕кр╣Ир╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щ
      await api.sendMessage(senderID, `
ЁЯОи **р╣Ар╕гр╕┤р╣Ир╕бр╕кр╕гр╣Йр╕▓р╕Зр╕ар╕▓р╕Юр╕кр╕╕р╕Фр╣Ар╕Ир╣Лр╕З** ЁЯОи
тЬНя╕П р╕Др╕│р╕кр╕▒р╣Ир╕З: ${prompt}
тЪб р╕кр╕Цр╕▓р╕Щр╕░: р╕Бр╕│р╕ер╕▒р╕Зр╕Ыр╕гр╕░р╕бр╕зр╕ер╕Ьр╕е...
ЁЯС╛ **р╕кр╕гр╣Йр╕▓р╕Зр╣Вр╕Фр╕в**: р╣Вр╕Чр╕бр╕▒р╕к
      `);

      // р╣Ар╕гр╕╡р╕вр╕Б API р╣Ар╕Юр╕╖р╣Ир╕нр╕кр╕гр╣Йр╕▓р╕Зр╕ар╕▓р╕Ю
      const response = await axios.get(apiUrl);
      const result = response.data;

      if (result.status !== "success" || !result.downloadUrl) {
        throw new Error("API р╣Др╕бр╣Ир╣Др╕Фр╣Йр╕кр╣Ир╕З URL р╕ар╕▓р╕Юр╕Бр╕ер╕▒р╕Ър╕бр╕▓р╕лр╕гр╕╖р╕нр╕кр╕Цр╕▓р╕Щр╕░р╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И");
      }

      const imageUrl = result.downloadUrl;

      // р╕Фр╕▓р╕зр╕Щр╣Мр╣Вр╕лр╕ер╕Фр╕ар╕▓р╕Юр╕Ир╕▓р╕Б URL
      const imageResponse = await axios.get(imageUrl, { responseType: 'arraybuffer' });
      const imageBuffer = Buffer.from(imageResponse.data, 'binary');
      const tempImagePath = path.join(__dirname, `../temp/genimg_${Date.now()}.jpg`);

      // р╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╕ар╕▓р╕Юр╕Кр╕▒р╣Ир╕зр╕Др╕гр╕▓р╕з
      fs.writeFileSync(tempImagePath, imageBuffer);

      // р╕кр╣Ир╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕кр╕гр╕╕р╕Ыр╕Бр╣Ир╕нр╕Щ
      const totalTime = ((Date.now() - startTime) / 1000).toFixed(2);
      await api.sendMessage(senderID, `
ЁЯЦ╝я╕П **р╕Ьр╕ер╕Бр╕▓р╕гр╕кр╕гр╣Йр╕▓р╕Зр╕ар╕▓р╕Юр╕кр╕╕р╕Фр╕Ыр╕▒р╕З** ЁЯЦ╝я╕П
тЬНя╕П р╕Др╕│р╕кр╕▒р╣Ир╕З: ${prompt}
тП░ р╣Гр╕Кр╣Йр╣Ар╕зр╕ер╕▓: ${totalTime} р╕зр╕┤р╕Щр╕▓р╕Чр╕╡
ЁЯТе р╕кр╕Цр╕▓р╕Щр╕░: р╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щ!
      `);

      // р╕кр╣Ир╕Зр╕ар╕▓р╕Юр╣Бр╕вр╕Б
      await api.uploadAttachment(senderID, tempImagePath);

      // р╕ер╕Ър╣Др╕Яр╕ер╣Мр╕Кр╕▒р╣Ир╕зр╕Др╕гр╕▓р╕зр╕лр╕ер╕▒р╕Зр╕кр╣Ир╕З
      fs.unlinkSync(tempImagePath);
    } catch (error) {
      console.error("тЭМ р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф:", error.message);
      return api.sendMessage(senderID, `
ЁЯТе **SYSTEM FAILURE** ЁЯТе
тЭМ р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕кр╕гр╣Йр╕▓р╕Зр╕лр╕гр╕╖р╕нр╕кр╣Ир╕Зр╕ар╕▓р╕Юр╣Др╕Фр╣Й!
ЁЯУв р╣Ар╕лр╕Хр╕╕р╕Ьр╕е: ${error.message}
тП▓я╕П р╕ер╕нр╕Зр╣Гр╕лр╕бр╣Ир╕ар╕▓р╕вр╕лр╕ер╕▒р╕З!
      `);
    }
  }
};
