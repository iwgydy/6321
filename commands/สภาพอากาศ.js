const fs = require('fs');
const path = require('path');
const axios = require('axios');

module.exports = {
  config: {
    name: 'setweatheralert'
  },
  run: async ({ api, event, args }) => {
    const { senderID } = event;

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏ô‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    if (args.length < 2) {
      return api.sendMessage(senderID, '‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ ‡πÄ‡∏ä‡πà‡∏ô /setweatheralert ‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏° 1h');
    }

    const city = args[0];
    const interval = args[1].toLowerCase();
    let intervalMs;

    // ‡πÅ‡∏õ‡∏•‡∏á‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏¥‡∏•‡∏•‡∏¥‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    try {
      if (interval.endsWith('m')) {
        intervalMs = parseInt(interval.slice(0, -1)) * 60 * 1000; // ‡∏ô‡∏≤‡∏ó‡∏µ
      } else if (interval.endsWith('h')) {
        intervalMs = parseInt(interval.slice(0, -1)) * 60 * 60 * 1000; // ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
      } else if (interval.endsWith('d')) {
        intervalMs = parseInt(interval.slice(0, -1)) * 24 * 60 * 60 * 1000; // ‡∏ß‡∏±‡∏ô
      } else {
        throw new Error('‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
      }
    } catch (error) {
      return api.sendMessage(senderID, '‚ö†Ô∏è ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ä‡πà‡∏ô 1m (‡∏ô‡∏≤‡∏ó‡∏µ), 1h (‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á), 1d (‡∏ß‡∏±‡∏ô)');
    }

    // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå bid.json
    const BID_FILE = path.join(__dirname, 'bid.json');
    let bidData = { alerts: {} };

    if (fs.existsSync(BID_FILE)) {
      try {
        bidData = JSON.parse(fs.readFileSync(BID_FILE, 'utf8'));
      } catch (error) {
        return api.sendMessage(senderID, '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå bid.json');
      }
    }

    if (!bidData.alerts[senderID]) {
      bidData.alerts[senderID] = [];
    }

    // ‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏ô‡∏µ‡πâ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    const existingIndex = bidData.alerts[senderID].findIndex(alert => alert.city === city);
    if (existingIndex !== -1) {
      bidData.alerts[senderID].splice(existingIndex, 1);
    }

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà
    bidData.alerts[senderID].push({ city, intervalMs, lastSent: 0 });

    try {
      fs.writeFileSync(BID_FILE, JSON.stringify(bidData, null, 2));
    } catch (error) {
      return api.sendMessage(senderID, '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå bid.json');
    }

    api.sendMessage(senderID, `‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ${city} ‡∏ó‡∏∏‡∏Å‡πÜ ${interval} ‡πÅ‡∏•‡πâ‡∏ß`);

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏à‡∏≤‡∏Å API
    try {
      const response = await axios.get(`https://kaiz-apis.gleeze.com/api/weather?q=${encodeURIComponent(city)}`);
      const weatherData = response.data;

      // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®
      api.sendMessage(senderID, `üå§ ‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÉ‡∏ô ${city}: ${weatherData.weather[0].description}`);
    } catch (error) {
      console.error('Error fetching weather data:', error);
      api.sendMessage(senderID, '‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
    }
  }
};
