const axios = require('axios');
const fs = require('fs');
const path = require('path');

const usersFile = path.join(__dirname, 'users.json');
let users = fs.existsSync(usersFile) ? JSON.parse(fs.readFileSync(usersFile)) : {};

module.exports = {
  config: {
    name: "‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô",
    version: "1.0.6",
    description: "üí∞ ‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏£‡∏±‡∏ö‡∏Ñ‡∏µ‡∏¢‡πå‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°‡∏™‡∏∏‡∏î‡πÄ‡∏ó‡∏û!",
    usage: "/‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô <‡∏•‡∏¥‡∏á‡∏Å‡πå>",
    aliases: ["topup", "angpao"],
  },
  run: async ({ api, event, args }) => {
    const { senderID } = event;

    if (args.length === 0) {
      return api.sendMessage(senderID, `
üí∏ **‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å‡∏û‡∏•‡∏±‡∏á‡πÄ‡∏ï‡πá‡∏°‡∏™‡∏π‡∏ö!**
üîó ‡πÉ‡∏ä‡πâ: /‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô https://gift.truemoney.com/campaign/?v=abc123
      `);
    }

    const text = args.join(" ");
    const regex = /https:\/\/gift.truemoney.com\/campaign\/\?v=([a-zA-Z0-9]+)/;
    const matchResult = text.match(regex);

    if (!matchResult || !matchResult[1]) {
      return api.sendMessage(senderID, `
‚ùå **‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ã‡∏≠‡∏á‡∏≠‡∏±‡∏á‡πÄ‡∏õ‡∏≤‡∏ú‡∏¥‡∏î!**
üîó ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: https://gift.truemoney.com/campaign/?v=abc123
      `);
    }

    const angpaoCode = matchResult[1];
    const paymentPhone = "0825658423";
    const apiUrl = `https://store.cyber-safe.pro/api/topup/truemoney/angpaofree/${angpaoCode}/${paymentPhone}`;

    try {
      const response = await axios.get(apiUrl);
      const data = response.data;

      if (data.status && data.status.code !== "SUCCESS") {
        let errorMessage = "üö´ **‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß**: ";
        if (data.status.code === "VOUCHER_EXPIRED") errorMessage += "‡∏ã‡∏≠‡∏á‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏";
        else if (data.status.code === "VOUCHER_REDEEMED") errorMessage += "‡∏ã‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß";
        else errorMessage += data.status.message || "API ‡∏Ç‡∏±‡∏î‡∏Ç‡πâ‡∏≠‡∏á";

        const voucherInfo = data.data && data.data.voucher ? `
üìú **‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡∏≠‡∏á**
üíµ ‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤: ${data.data.voucher.amount_baht} ‡∏ö‡∏≤‡∏ó
üë• ‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß/‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${data.data.voucher.redeemed}/${data.data.voucher.member}
‚è∞ ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏: ${new Date(data.data.voucher.expire_date).toLocaleString('th-TH')}
        ` : "";
        return api.sendMessage(senderID, errorMessage + voucherInfo);
      }

      const amount = data.data.voucher.amount_baht;
      const days = Math.floor(amount / 5);
      let key;
      do {
        key = generateKey();
      } while (users[senderID]?.usedKeys?.includes(key)); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ö‡∏Ñ‡∏µ‡∏¢‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡πÉ‡∏ä‡πâ

      users[senderID] = users[senderID] || { key: null, keyExpiry: null, keyType: null, usedKeys: [], usage: {} };
      users[senderID].key = key;
      users[senderID].keyExpiry = new Date(Date.now() + days * 24 * 60 * 60 * 1000).toISOString();
      users[senderID].keyType = "premium";
      users[senderID].usedKeys = users[senderID].usedKeys || [];
      users[senderID].usedKeys.push(key); // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏µ‡∏¢‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß
      saveUsers();

      const successMessage = `
‚úÖ **‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!**
üì± ‡πÄ‡∏ö‡∏≠‡∏£‡πå: ${paymentPhone}
üí∞ ‡∏£‡∏´‡∏±‡∏™‡∏ã‡∏≠‡∏á: ${angpaoCode}
üíµ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${amount} ‡∏ö‡∏≤‡∏ó
üìÖ ‡∏≠‡∏≤‡∏¢‡∏∏‡∏Ñ‡∏µ‡∏¢‡πå: ${days} ‡∏ß‡∏±‡∏ô
üîë **‡∏Ñ‡∏µ‡∏¢‡πå‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°**: ${key}
‚ú® ‡πÉ‡∏ä‡πâ: /sms ${key} ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏µ‡∏¢‡πå
      `;
      await api.sendMessage(senderID, successMessage);
    } catch (error) {
      console.error("üî• ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error.message);
      return api.sendMessage(senderID, `
üí• **‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏±‡∏á!**
‚ùå ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: ${error.code === "ENOTFOUND" ? "‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏•‡πà‡∏°" : error.message}
      `);
    }
  },

  generateKey() {
    const chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
    let key = "";
    for (let i = 0; i < 13; i++) key += chars.charAt(Math.floor(Math.random() * chars.length));
    return key;
  },

  saveUsers() {
    fs.writeFileSync(usersFile, JSON.stringify(users, null, 2));
  }
};

function generateKey() {
  return module.exports.generateKey();
}

function saveUsers() {
  module.exports.saveUsers();
}
